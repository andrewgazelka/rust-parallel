We are given the input array [3, 10, 1, 11, 30, 18, 8, 20].

I wrote a parallel sorter in Rust. It has bitonic and even_odd sort implemented .

- https://github.com/andrewgazelka/rust-parallel/blob/master/src/sort/even_odd.rs
- https://github.com/andrewgazelka/rust-parallel/blob/master/src/sort/bitonic.rs

Even odd appears to work for all input sizes (assuming it is a power of 2), but this is not the case
for my bitonic sort. It fails whenever the input is larger than 8. I clearly have a bug somewhere.


# Bitonic Merge Output 

input [3, 10, 1, 11, 30, 18, 8, 20]

PHASE 1
4-sequences [3, 10, 11, 1, 18, 30, 20, 8]

PHASE 2
bitonic_merge stride 2
result [3, 1, 11, 10, 20, 30, 18, 8]
bitonic_merge stride 1
result [1, 3, 10, 11, 30, 20, 18, 8]

PHASE 3
cmp_exchange stride 4
result [1, 3, 10, 8, 30, 20, 18, 11]
cmp_exchange stride 2
result [1, 3, 10, 8, 18, 11, 30, 20]
cmp_exchange stride 1
result [1, 3, 8, 10, 11, 18, 20, 30]

# Even Odd Output
input [3, 10, 1, 11, 30, 18, 8, 20]

sort pairs of 2 [3, 10, 1, 11, 18, 30, 8, 20]

[src/sort/even_odd.rs:93] o_emerge(&left_sample(a), &right_sample(b)) = [
    18,
    20,
]
[src/sort/even_odd.rs:93] o_emerge(&left_sample(a), &right_sample(b)) = [
    3,
    11,
]
[src/sort/even_odd.rs:94] o_emerge(&right_sample(a), &left_sample(b)) = [
    1,
    10,
]
[src/sort/even_odd.rs:94] o_emerge(&right_sample(a), &left_sample(b)) = [
    8,
    30,
]
[src/sort/even_odd.rs:50] o_emerge(first_half, second_half) = [
    1,
    3,
    10,
    11,
]
[src/sort/even_odd.rs:50] o_emerge(first_half, second_half) = [
    8,
    18,
    20,
    30,
]
[src/sort/even_odd.rs:93] o_emerge(&left_sample(a), &right_sample(b)) = [
    1,
    30,
]
[src/sort/even_odd.rs:94] o_emerge(&right_sample(a), &left_sample(b)) = [
    10,
    18,
]
[src/sort/even_odd.rs:93] o_emerge(&left_sample(a), &right_sample(b)) = [
    1,
    10,
    18,
    30,
]
[src/sort/even_odd.rs:93] o_emerge(&left_sample(a), &right_sample(b)) = [
    3,
    20,
]
[src/sort/even_odd.rs:94] o_emerge(&right_sample(a), &left_sample(b)) = [
    8,
    11,
]
[src/sort/even_odd.rs:94] o_emerge(&right_sample(a), &left_sample(b)) = [
    3,
    8,
    11,
    20,
]
[src/sort/even_odd.rs:50] o_emerge(first_half, second_half) = [
    1,
    3,
    8,
    10,
    11,
    18,
    20,
    30,
]

